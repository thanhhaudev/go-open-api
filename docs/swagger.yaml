definitions:
  error.AuthError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  error.UserError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handler.AccessTokenRequest:
    properties:
      api_key:
        type: string
      api_secret:
        type: string
    type: object
  handler.ExchangeTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  handler.RefreshTokenRequest:
    properties:
      access_token:
        type: string
    type: object
  model.User:
    properties:
      created_at:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/access:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.AccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.AuthError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.AuthError'
      summary: Retrieve refresh token using API key and secret
      tags:
      - auth
  /api/auth/exchange:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.ExchangeTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.AuthError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.AuthError'
      summary: Exchange refresh token for access token
      tags:
      - auth
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.AuthError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.AuthError'
      summary: Retrieve a new access token
      tags:
      - auth
  /api/v1/users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.AuthError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.AuthError'
      summary: Retrieve all users
      tags:
      - user
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.UserError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.UserError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.UserError'
      summary: Find user by ID
      tags:
      - user
swagger: "2.0"
